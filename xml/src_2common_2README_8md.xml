<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="src_2common_2README_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>Common<sp/>Utilities</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>folder<sp/>contains<sp/>shared<sp/>utilities<sp/>for<sp/>the<sp/>Event-Driven<sp/>Programming<sp/>in<sp/>C++<sp/>project.<sp/>Currently,<sp/>the<sp/>library<sp/>includes<sp/>a<sp/>simple<sp/>logging<sp/>utility<sp/>that<sp/>can<sp/>be<sp/>used<sp/>by<sp/>various<sp/>components<sp/>throughout<sp/>the<sp/>project.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Contents</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>**logger.hpp<sp/>&amp;<sp/>logger.cpp**<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>A<sp/>lightweight<sp/>logging<sp/>utility<sp/>that<sp/>provides<sp/>methods<sp/>for<sp/>logging<sp/>messages<sp/>at<sp/>different<sp/>levels<sp/>(Debug,<sp/>Info,<sp/>Warning,<sp/>and<sp/>Error).<sp/>The<sp/>logger<sp/>is<sp/>defined<sp/>within<sp/>the<sp/>`common`<sp/>namespace<sp/>and<sp/>allows<sp/>you<sp/>to<sp/>set<sp/>the<sp/>current<sp/>log<sp/>level<sp/>to<sp/>control<sp/>which<sp/>messages<sp/>are<sp/>output.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>**CMakeLists.txt**<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>The<sp/>CMake<sp/>configuration<sp/>file<sp/>for<sp/>building<sp/>the<sp/>common<sp/>utilities<sp/>library.<sp/>This<sp/>library<sp/>can<sp/>be<sp/>linked<sp/>by<sp/>other<sp/>subprojects<sp/>that<sp/>require<sp/>shared<sp/>functionality.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Usage</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>use<sp/>the<sp/>logging<sp/>functionality<sp/>in<sp/>your<sp/>code,<sp/>include<sp/>the<sp/>header<sp/>file<sp/>and<sp/>link<sp/>against<sp/>the<sp/>`common`<sp/>library.<sp/>For<sp/>example:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```cpp</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;logger.hpp&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">int<sp/>main()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Set<sp/>the<sp/>logging<sp/>level<sp/>to<sp/>Debug<sp/>to<sp/>enable<sp/>all<sp/>log<sp/>messages.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>common::Logger::setLogLevel(common::LogLevel::Debug);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>common::Logger::debug(&quot;This<sp/>is<sp/>a<sp/>debug<sp/>message.&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>common::Logger::info(&quot;This<sp/>is<sp/>an<sp/>info<sp/>message.&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>common::Logger::warning(&quot;This<sp/>is<sp/>a<sp/>warning<sp/>message.&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>common::Logger::error(&quot;This<sp/>is<sp/>an<sp/>error<sp/>message.&quot;);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Building</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>common<sp/>utilities<sp/>library<sp/>is<sp/>built<sp/>as<sp/>part<sp/>of<sp/>the<sp/>overall<sp/>project<sp/>using<sp/>the<sp/>root<sp/>`CMakeLists.txt`.<sp/>It<sp/>can<sp/>also<sp/>be<sp/>built<sp/>independently<sp/>by<sp/>navigating<sp/>to<sp/>this<sp/>directory<sp/>and<sp/>running<sp/>CMake:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">mkdir<sp/>build</highlight></codeline>
<codeline><highlight class="normal">cd<sp/>build</highlight></codeline>
<codeline><highlight class="normal">cmake<sp/>..</highlight></codeline>
<codeline><highlight class="normal">make</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>will<sp/>compile<sp/>the<sp/>`common`<sp/>library,<sp/>which<sp/>can<sp/>then<sp/>be<sp/>linked<sp/>with<sp/>other<sp/>parts<sp/>of<sp/>the<sp/>project.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>License</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>project<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>License.<sp/>See<sp/>the<sp/>[LICENSE](../../LICENSE)<sp/>file<sp/>for<sp/>details.</highlight></codeline>
    </programlisting>
    <location file="src/common/README.md"/>
  </compounddef>
</doxygen>
