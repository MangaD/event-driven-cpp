<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="md_src_2common_2README" kind="page">
    <compoundname>md_src_2common_2README</compoundname>
    <title>Common Utilities</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><anchor id="md_src_2common_2README_1autotoc_md148"/> This folder contains shared utilities for the Event-Driven Programming in C++ project. Currently, the library includes a simple logging utility that can be used by various components throughout the project.</para>
<sect1 id="md_src_2common_2README_1autotoc_md149">
<title>Contents</title>
<para><itemizedlist>
<listitem><para><bold><ref refid="logger_8hpp" kindref="compound">logger.hpp</ref> &amp; <ref refid="logger_8cpp" kindref="compound">logger.cpp</ref></bold> <linebreak/>
 A lightweight logging utility that provides methods for logging messages at different levels (Debug, Info, Warning, and Error). The logger is defined within the <computeroutput>common</computeroutput> namespace and allows you to set the current log level to control which messages are output.</para>
</listitem><listitem><para><bold>CMakeLists.txt</bold> <linebreak/>
 The CMake configuration file for building the common utilities library. This library can be linked by other subprojects that require shared functionality.</para>
</listitem></itemizedlist>
</para>
</sect1>
<sect1 id="md_src_2common_2README_1autotoc_md150">
<title>Usage</title>
<para>To use the logging functionality in your code, include the header file and link against the <computeroutput>common</computeroutput> library. For example:</para>
<para><programlisting filename=".cpp"><codeline><highlight class="preprocessor">#include<sp/>&quot;<ref refid="logger_8hpp" kindref="compound">logger.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="callbacks_2main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>logging<sp/>level<sp/>to<sp/>Debug<sp/>to<sp/>enable<sp/>all<sp/>log<sp/>messages.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcommon_1_1Logger_1a56f19fa952edee3073774d6d423c715c" kindref="member">common::Logger::setLogLevel</ref>(<ref refid="namespacecommon_1aa3dd8c5983888f4c0199cf0bb2a73b2aaa603905470e2a5b8c13e96b579ef0dba" kindref="member">common::LogLevel::Debug</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcommon_1_1Logger_1a2af61f1a28f8242267a5d7dd7b38a16f" kindref="member">common::Logger::debug</ref>(</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>a<sp/>debug<sp/>message.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcommon_1_1Logger_1a1512b5091e25ee377f0f7bc92fa79e2c" kindref="member">common::Logger::info</ref>(</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>an<sp/>info<sp/>message.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcommon_1_1Logger_1ad63cb13f8ae295d2763dac7e2b8144c1" kindref="member">common::Logger::warning</ref>(</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>a<sp/>warning<sp/>message.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcommon_1_1Logger_1aec9c7a7111c70e5f9b4e13aa71cc805f" kindref="member">common::Logger::error</ref>(</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>an<sp/>error<sp/>message.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
</sect1>
<sect1 id="md_src_2common_2README_1autotoc_md151">
<title>Building</title>
<para>The common utilities library is built as part of the overall project using the root <computeroutput>CMakeLists.txt</computeroutput>. It can also be built independently by navigating to this directory and running CMake:</para>
<para><programlisting filename=".bash"><codeline><highlight class="normal">mkdir<sp/>build</highlight></codeline>
<codeline><highlight class="normal">cd<sp/>build</highlight></codeline>
<codeline><highlight class="normal">cmake<sp/>..</highlight></codeline>
<codeline><highlight class="normal">make</highlight></codeline>
</programlisting></para>
<para>This will compile the <computeroutput>common</computeroutput> library, which can then be linked with other parts of the project.</para>
</sect1>
<sect1 id="md_src_2common_2README_1autotoc_md152">
<title>License</title>
<para>This project is licensed under the MIT License. See the <ulink url="../../LICENSE">LICENSE</ulink> file for details. </para>
</sect1>
    </detaileddescription>
    <location file="src/common/README.md"/>
  </compounddef>
</doxygen>
