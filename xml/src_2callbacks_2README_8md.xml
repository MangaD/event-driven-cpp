<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="src_2callbacks_2README_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>Callbacks<sp/>Example</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>directory<sp/>contains<sp/>an<sp/>example<sp/>implementation<sp/>of<sp/>a<sp/>simple<sp/>callback<sp/>mechanism<sp/>in<sp/>C++<sp/>using<sp/>`std::function`.<sp/>The<sp/>example<sp/>demonstrates<sp/>how<sp/>to<sp/>set<sp/>and<sp/>trigger<sp/>callbacks<sp/>through<sp/>an<sp/>`Event`<sp/>class,<sp/>illustrating<sp/>one<sp/>approach<sp/>to<sp/>event-driven<sp/>programming.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Contents</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>**callbacks.hpp**<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Declares<sp/>the<sp/>`Event`<sp/>class,<sp/>which<sp/>provides<sp/>a<sp/>mechanism<sp/>to<sp/>register<sp/>a<sp/>callback<sp/>function<sp/>(using<sp/>`std::function&lt;void()&gt;`)<sp/>and<sp/>trigger<sp/>it<sp/>when<sp/>needed.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>**callbacks.cpp**<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Provides<sp/>the<sp/>implementation<sp/>of<sp/>the<sp/>`Event`<sp/>class<sp/>methods.<sp/>The<sp/>`setCallback()`<sp/>method<sp/>assigns<sp/>a<sp/>callback<sp/>function,<sp/>and<sp/>the<sp/>`trigger()`<sp/>method<sp/>invokes<sp/>the<sp/>callback<sp/>if<sp/>it<sp/>has<sp/>been<sp/>set.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>**main.cpp**<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Contains<sp/>a<sp/>simple<sp/>demonstration<sp/>of<sp/>the<sp/>callback<sp/>mechanism.<sp/>In<sp/>this<sp/>example,<sp/>an<sp/>`Event`<sp/>instance<sp/>is<sp/>created,<sp/>a<sp/>callback<sp/>is<sp/>set<sp/>using<sp/>a<sp/>lambda<sp/>expression,<sp/>and<sp/>the<sp/>event<sp/>is<sp/>triggered<sp/>to<sp/>execute<sp/>the<sp/>callback.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>**CMakeLists.txt**<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>The<sp/>CMake<sp/>configuration<sp/>file<sp/>for<sp/>building<sp/>this<sp/>example.<sp/>It<sp/>sets<sp/>the<sp/>C++20<sp/>standard,<sp/>includes<sp/>necessary<sp/>directories<sp/>(such<sp/>as<sp/>`src/common`<sp/>if<sp/>shared<sp/>utilities<sp/>are<sp/>used),<sp/>and<sp/>creates<sp/>an<sp/>executable<sp/>target<sp/>named<sp/>`callbacks_example`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Building<sp/>the<sp/>Example</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>build<sp/>the<sp/>callbacks<sp/>example:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">1.<sp/>**Navigate<sp/>to<sp/>the<sp/>project<sp/>root<sp/>directory:**</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>```bash</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>cd<sp/>/path/to/event-driven-cpp</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">2.<sp/>**Create<sp/>a<sp/>build<sp/>directory<sp/>and<sp/>configure<sp/>the<sp/>project<sp/>with<sp/>CMake:**</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>```bash</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>mkdir<sp/>build</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>cd<sp/>build</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>cmake<sp/>..</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">3.<sp/>**Build<sp/>the<sp/>callbacks<sp/>example:**</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>On<sp/>Unix-like<sp/>systems,<sp/>run:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>```bash</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>make<sp/>callbacks_example</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Running<sp/>the<sp/>Example</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">After<sp/>building,<sp/>run<sp/>the<sp/>executable<sp/>for<sp/>the<sp/>callbacks<sp/>example.<sp/>For<sp/>instance:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">./src/callbacks/callbacks_example</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>will<sp/>execute<sp/>the<sp/>program,<sp/>which<sp/>sets<sp/>a<sp/>callback<sp/>that<sp/>prints<sp/>a<sp/>message<sp/>to<sp/>the<sp/>console,<sp/>and<sp/>then<sp/>triggers<sp/>the<sp/>event<sp/>to<sp/>invoke<sp/>the<sp/>callback.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Overview</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>callbacks<sp/>example<sp/>is<sp/>designed<sp/>to<sp/>illustrate<sp/>a<sp/>lightweight<sp/>approach<sp/>to<sp/>handling<sp/>asynchronous<sp/>events<sp/>or<sp/>function<sp/>calls<sp/>using<sp/>callbacks.<sp/>The<sp/>`Event`<sp/>class<sp/>encapsulates<sp/>the<sp/>callback<sp/>mechanism,<sp/>making<sp/>it<sp/>easy<sp/>to<sp/>decouple<sp/>the<sp/>registration<sp/>of<sp/>callback<sp/>functions<sp/>from<sp/>their<sp/>execution.<sp/>This<sp/>pattern<sp/>is<sp/>commonly<sp/>used<sp/>in<sp/>event-driven<sp/>programming<sp/>to<sp/>enable<sp/>flexible,<sp/>modular,<sp/>and<sp/>decoupled<sp/>designs.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Feel<sp/>free<sp/>to<sp/>modify<sp/>and<sp/>extend<sp/>this<sp/>example<sp/>to<sp/>experiment<sp/>with<sp/>different<sp/>callback<sp/>scenarios<sp/>and<sp/>integrate<sp/>it<sp/>into<sp/>larger<sp/>projects.</highlight></codeline>
    </programlisting>
    <location file="src/callbacks/README.md"/>
  </compounddef>
</doxygen>
