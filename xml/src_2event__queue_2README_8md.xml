<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="src_2event__queue_2README_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>Event<sp/>Queue<sp/>Example</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>directory<sp/>contains<sp/>an<sp/>example<sp/>implementation<sp/>of<sp/>a<sp/>thread-safe<sp/>event<sp/>queue<sp/>in<sp/>C++.<sp/>The<sp/>event<sp/>queue<sp/>is<sp/>designed<sp/>to<sp/>decouple<sp/>event<sp/>production<sp/>from<sp/>event<sp/>processing,<sp/>making<sp/>it<sp/>useful<sp/>in<sp/>event-driven<sp/>architectures,<sp/>game<sp/>loops,<sp/>or<sp/>any<sp/>asynchronous<sp/>application.<sp/>Each<sp/>event<sp/>is<sp/>represented<sp/>as<sp/>a<sp/>callable<sp/>object<sp/>(`std::function&lt;void()&gt;`),<sp/>and<sp/>the<sp/>queue<sp/>processes<sp/>events<sp/>in<sp/>a<sp/>FIFO<sp/>(first-in,<sp/>first-out)<sp/>manner.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">---</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Contents</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>**event_queue.hpp**<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Declares<sp/>the<sp/>`EventQueue`<sp/>class,<sp/>which<sp/>provides<sp/>methods<sp/>for<sp/>enqueuing<sp/>events,<sp/>processing<sp/>them,<sp/>and<sp/>checking<sp/>if<sp/>the<sp/>queue<sp/>is<sp/>empty.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>**event_queue.cpp**<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Implements<sp/>the<sp/>`EventQueue`<sp/>class.<sp/>It<sp/>handles<sp/>thread-safe<sp/>insertion<sp/>of<sp/>events<sp/>and<sp/>processing<sp/>of<sp/>queued<sp/>events.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>**main.cpp**<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>A<sp/>demonstration<sp/>program<sp/>that<sp/>enqueues<sp/>several<sp/>events<sp/>(using<sp/>lambda<sp/>functions)<sp/>and<sp/>then<sp/>processes<sp/>them<sp/>in<sp/>FIFO<sp/>order,<sp/>printing<sp/>messages<sp/>to<sp/>the<sp/>console.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>**CMakeLists.txt**<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Contains<sp/>the<sp/>CMake<sp/>build<sp/>configuration<sp/>for<sp/>this<sp/>example.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">---</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Building<sp/>the<sp/>Example</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>example<sp/>is<sp/>built<sp/>using<sp/>CMake.<sp/>You<sp/>can<sp/>either<sp/>use<sp/>the<sp/>provided<sp/>CMake<sp/>presets<sp/>(if<sp/>available)<sp/>or<sp/>manually<sp/>configure<sp/>and<sp/>build<sp/>the<sp/>project.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Manual<sp/>Build<sp/>Steps</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">1.<sp/>**Create<sp/>a<sp/>Build<sp/>Directory<sp/>and<sp/>Configure:**</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>Open<sp/>a<sp/>terminal<sp/>in<sp/>the<sp/>project<sp/>root<sp/>and<sp/>run:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>```bash</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>mkdir<sp/>build</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>cd<sp/>build</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>cmake<sp/>..</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">2.<sp/>**Build<sp/>the<sp/>Project:**</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>```bash</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>cmake<sp/>--build<sp/>.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">---</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Running<sp/>the<sp/>Example</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">After<sp/>building,<sp/>run<sp/>the<sp/>executable<sp/>from<sp/>the<sp/>build<sp/>output<sp/>directory.<sp/>For<sp/>example:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>**On<sp/>Windows:**</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>```powershell</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.\src\event_queue\Debug\event_queue_example.exe</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>**On<sp/>Linux/macOS:**</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>```bash</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>./src/event_queue/event_queue_example</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">When<sp/>executed,<sp/>the<sp/>program<sp/>enqueues<sp/>several<sp/>events<sp/>that<sp/>print<sp/>messages<sp/>to<sp/>the<sp/>console<sp/>and<sp/>then<sp/>processes<sp/>them.<sp/>The<sp/>output<sp/>should<sp/>display<sp/>the<sp/>messages<sp/>in<sp/>the<sp/>order<sp/>the<sp/>events<sp/>were<sp/>added<sp/>to<sp/>the<sp/>queue.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">---</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Overview</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>example<sp/>demonstrates:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>**Thread-Safe<sp/>Event<sp/>Queuing:**<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Using<sp/>`std::queue`,<sp/>`std::mutex`,<sp/>and<sp/>`std::lock_guard`<sp/>to<sp/>safely<sp/>manage<sp/>events<sp/>across<sp/>multiple<sp/>threads.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>**Decoupled<sp/>Event<sp/>Processing:**<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Separating<sp/>the<sp/>production<sp/>of<sp/>events<sp/>from<sp/>their<sp/>consumption<sp/>allows<sp/>flexible<sp/>and<sp/>scalable<sp/>system<sp/>design.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>**FIFO<sp/>Processing:**<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Ensuring<sp/>that<sp/>events<sp/>are<sp/>processed<sp/>in<sp/>the<sp/>order<sp/>they<sp/>were<sp/>enqueued.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Feel<sp/>free<sp/>to<sp/>modify<sp/>or<sp/>extend<sp/>this<sp/>example<sp/>to<sp/>suit<sp/>your<sp/>needs,<sp/>such<sp/>as<sp/>adding<sp/>events<sp/>from<sp/>multiple<sp/>threads<sp/>or<sp/>integrating<sp/>additional<sp/>functionality.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">---</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>License</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>project<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>License.<sp/>See<sp/>the<sp/>[LICENSE](../../LICENSE)<sp/>file<sp/>for<sp/>details.</highlight></codeline>
    </programlisting>
    <location file="src/event_queue/README.md"/>
  </compounddef>
</doxygen>
