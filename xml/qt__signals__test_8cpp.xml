<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="qt__signals__test_8cpp" kind="file" language="C++">
    <compoundname>qt_signals_test.cpp</compoundname>
    <includes local="no">QCoreApplication</includes>
    <includes local="no">QString</includes>
    <includes local="no">cassert</includes>
    <includes local="no">iostream</includes>
    <includes refid="qt__signals_8hpp" local="yes">qt_signals/qt_signals.hpp</includes>
    <incdepgraph>
      <node id="6">
        <label>qt_signals/qt_signals.hpp</label>
        <link refid="qt__signals_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/qt_signals_test.cpp</label>
        <link refid="qt__signals__test_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>QCoreApplication</label>
      </node>
      <node id="7">
        <label>QObject</label>
      </node>
      <node id="3">
        <label>QString</label>
      </node>
      <node id="4">
        <label>cassert</label>
      </node>
      <node id="5">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="qt__signals__test_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/qt_signals_test.cpp" line="23" column="5" bodyfile="tests/qt_signals_test.cpp" bodystart="23" bodyend="57"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Unit tests for the Qt signals and slots demonstration. </para>
    </briefdescription>
    <detaileddescription>
<para>This file contains tests to verify that the QtSignalsExample class correctly emits signals and that these signals can be received by connected slots. The test creates an instance of QtSignalsExample, connects its signal to a lambda function that records the received message, and then emits a test signal. Assertions verify that the slot is called and that the received message matches the expected value.</para>
<para>To run this test, a QCoreApplication is instantiated to provide the necessary Qt event loop, even though the direct connection should be immediate. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QCoreApplication&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QString&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="qt__signals_8hpp" kindref="compound">qt_signals/qt_signals.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceqt__signals" kindref="compound">qt_signals</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="callbacks_2main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv[])<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>QCoreApplication<sp/>to<sp/>provide<sp/>the<sp/>Qt<sp/>event<sp/>loop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>QCoreApplication<sp/>app(argc,<sp/>argv);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>instance<sp/>of<sp/>QtSignalsExample.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqt__signals_1_1QtSignalsExample" kindref="compound">QtSignalsExample</ref><sp/>example;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Variables<sp/>to<sp/>capture<sp/>the<sp/>results<sp/>from<sp/>the<sp/>signal-slot<sp/>connection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>slotCalled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>receivedMessage;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Connect<sp/>the<sp/>&apos;mySignal&apos;<sp/>signal<sp/>to<sp/>a<sp/>lambda<sp/>that<sp/>sets<sp/>the<sp/>flag<sp/>and<sp/>captures<sp/>the<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>connected<sp/>=<sp/>QObject::connect(&amp;example,<sp/>&amp;<ref refid="classqt__signals_1_1QtSignalsExample_1a472393d7a246c556799ae89ca7d82881" kindref="member">QtSignalsExample::mySignal</ref>,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;slotCalled,<sp/>&amp;receivedMessage](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;msg)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slotCalled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>receivedMessage<sp/>=<sp/>msg;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>that<sp/>the<sp/>connection<sp/>was<sp/>successful.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(connected<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Signal-slot<sp/>connection<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>test<sp/>message<sp/>to<sp/>be<sp/>emitted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>testMsg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>message&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Emit<sp/>the<sp/>signal<sp/>with<sp/>the<sp/>test<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>example.<ref refid="classqt__signals_1_1QtSignalsExample_1ade4211730232a696cbaa6829cbc86dcb" kindref="member">emitSignal</ref>(testMsg);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assert<sp/>that<sp/>the<sp/>slot<sp/>was<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(slotCalled<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Slot<sp/>was<sp/>not<sp/>called<sp/>after<sp/>signal<sp/>emission&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assert<sp/>that<sp/>the<sp/>received<sp/>message<sp/>matches<sp/>the<sp/>test<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(receivedMessage<sp/>==<sp/>testMsg<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Received<sp/>message<sp/>does<sp/>not<sp/>match<sp/>the<sp/>emitted<sp/>message&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;All<sp/>Qt<sp/>signals<sp/>tests<sp/>passed.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/qt_signals_test.cpp"/>
  </compounddef>
</doxygen>
