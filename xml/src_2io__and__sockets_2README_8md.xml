<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="src_2io__and__sockets_2README_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>I/O<sp/>and<sp/>Sockets<sp/>Demonstration</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>directory<sp/>contains<sp/>a<sp/>cross-platform<sp/>demonstration<sp/>that<sp/>monitors<sp/>both<sp/>socket<sp/>events<sp/>and<sp/>console<sp/>input.<sp/>The<sp/>demonstration<sp/>sets<sp/>up<sp/>a<sp/>simple<sp/>TCP<sp/>server<sp/>socket<sp/>(listening<sp/>on<sp/>port<sp/>12345)<sp/>and<sp/>continuously<sp/>monitors<sp/>for:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>**Incoming<sp/>connections<sp/>on<sp/>the<sp/>server<sp/>socket**,<sp/>and</highlight></codeline>
<codeline><highlight class="normal">-<sp/>**Console<sp/>input**<sp/>(e.g.,<sp/>user<sp/>commands<sp/>such<sp/>as<sp/>&quot;quit&quot;<sp/>to<sp/>stop<sp/>the<sp/>server).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>implementation<sp/>uses<sp/>different<sp/>techniques<sp/>depending<sp/>on<sp/>the<sp/>platform:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>**Windows:**<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Uses<sp/>Winsockâ€™s<sp/>`select()`<sp/>function<sp/>to<sp/>monitor<sp/>the<sp/>server<sp/>socket<sp/>and<sp/>`_kbhit()`<sp/>to<sp/>poll<sp/>for<sp/>console<sp/>input.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>**POSIX<sp/>(Linux/macOS):**<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Uses<sp/>the<sp/>`select()`<sp/>system<sp/>call<sp/>to<sp/>monitor<sp/>both<sp/>the<sp/>server<sp/>socket<sp/>and<sp/>standard<sp/>input<sp/>(STDIN_FILENO).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">---</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Contents</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>**io_and_sockets.cpp**<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Implements<sp/>the<sp/>demonstration.<sp/>This<sp/>file<sp/>sets<sp/>up<sp/>the<sp/>TCP<sp/>server<sp/>socket,<sp/>enters<sp/>a<sp/>loop<sp/>to<sp/>monitor<sp/>socket<sp/>and<sp/>console<sp/>events,<sp/>and<sp/>handles<sp/>incoming<sp/>connections<sp/>and<sp/>user<sp/>input.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>**CMakeLists.txt**<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Contains<sp/>the<sp/>CMake<sp/>build<sp/>configuration<sp/>for<sp/>this<sp/>demonstration.<sp/>It<sp/>supports<sp/>cross-platform<sp/>builds<sp/>and<sp/>links<sp/>against<sp/>necessary<sp/>libraries<sp/>(e.g.,<sp/>`ws2_32`<sp/>on<sp/>Windows<sp/>for<sp/>Winsock).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">---</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Building<sp/>the<sp/>Demonstration</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>demonstration<sp/>is<sp/>built<sp/>using<sp/>CMake.<sp/>You<sp/>can<sp/>use<sp/>the<sp/>provided<sp/>CMake<sp/>presets<sp/>for<sp/>cross-platform<sp/>configurations<sp/>or<sp/>run<sp/>the<sp/>commands<sp/>manually.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Using<sp/>CMake<sp/>Presets</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">For<sp/>example,<sp/>to<sp/>build<sp/>on<sp/>Windows<sp/>using<sp/>MSVC<sp/>in<sp/>Debug<sp/>mode:</highlight></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">cmake<sp/>--preset<sp/>windows-msvc-debug</highlight></codeline>
<codeline><highlight class="normal">cmake<sp/>--build<sp/>--preset<sp/>windows-msvc-debug</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">For<sp/>Linux<sp/>with<sp/>GCC<sp/>in<sp/>Debug<sp/>mode:</highlight></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">cmake<sp/>--preset<sp/>linux-gcc-debug</highlight></codeline>
<codeline><highlight class="normal">cmake<sp/>--build<sp/>--preset<sp/>linux-gcc-debug</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Manual<sp/>Build<sp/>Steps</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">1.<sp/>**Create<sp/>a<sp/>Build<sp/>Directory<sp/>and<sp/>Configure:**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>```bash</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>mkdir<sp/>build</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>cd<sp/>build</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>cmake<sp/>..</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>```</highlight></codeline>
<codeline><highlight class="normal">2.<sp/>**Build<sp/>the<sp/>Project:**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>```bash</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>cmake<sp/>--build<sp/>.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">---</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Running<sp/>the<sp/>Demonstration</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">After<sp/>building,<sp/>run<sp/>the<sp/>executable<sp/>from<sp/>the<sp/>build<sp/>output<sp/>directory:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>**On<sp/>Windows:**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>```powershell</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.\src\io_and_sockets\Debug\io_and_sockets_example.exe</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>```</highlight></codeline>
<codeline><highlight class="normal">-<sp/>**On<sp/>Linux/macOS:**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>```bash</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>./src/io_and_sockets/io_and_sockets_example</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">When<sp/>the<sp/>demonstration<sp/>runs,<sp/>you<sp/>will<sp/>see<sp/>console<sp/>messages<sp/>indicating:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>That<sp/>the<sp/>server<sp/>is<sp/>listening<sp/>on<sp/>port<sp/>12345.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>When<sp/>a<sp/>connection<sp/>is<sp/>accepted<sp/>on<sp/>the<sp/>server<sp/>socket.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Any<sp/>console<sp/>input<sp/>entered<sp/>by<sp/>the<sp/>user.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Type<sp/>`&quot;quit&quot;`<sp/>(without<sp/>quotes)<sp/>in<sp/>the<sp/>console<sp/>and<sp/>press<sp/>Enter<sp/>to<sp/>gracefully<sp/>shut<sp/>down<sp/>the<sp/>server<sp/>and<sp/>exit<sp/>the<sp/>demonstration.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">---</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Additional<sp/>Information</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>demonstration<sp/>illustrates:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>**Cross-Platform<sp/>Socket<sp/>Programming:**<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>How<sp/>to<sp/>create<sp/>and<sp/>manage<sp/>a<sp/>TCP<sp/>server<sp/>socket<sp/>using<sp/>Winsock<sp/>on<sp/>Windows<sp/>and<sp/>POSIX<sp/>sockets<sp/>on<sp/>Linux/macOS.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>**Event<sp/>Monitoring:**<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>How<sp/>to<sp/>monitor<sp/>multiple<sp/>event<sp/>sources<sp/>(sockets<sp/>and<sp/>console<sp/>input)<sp/>using<sp/>platform-specific<sp/>techniques<sp/>such<sp/>as<sp/>`select()`<sp/>and<sp/>`_kbhit()`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>**Conditional<sp/>Compilation:**<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>How<sp/>to<sp/>use<sp/>preprocessor<sp/>directives<sp/>to<sp/>write<sp/>code<sp/>that<sp/>works<sp/>on<sp/>multiple<sp/>platforms.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Feel<sp/>free<sp/>to<sp/>modify<sp/>and<sp/>extend<sp/>this<sp/>example.<sp/>You<sp/>might<sp/>experiment<sp/>with<sp/>handling<sp/>multiple<sp/>concurrent<sp/>client<sp/>connections<sp/>or<sp/>integrating<sp/>additional<sp/>I/O<sp/>event<sp/>sources.</highlight></codeline>
    </programlisting>
    <location file="src/io_and_sockets/README.md"/>
  </compounddef>
</doxygen>
