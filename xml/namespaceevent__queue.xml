<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespaceevent__queue" kind="namespace" language="C++">
    <compoundname>event_queue</compoundname>
    <innerclass refid="classevent__queue_1_1EventQueue" prot="public">event_queue::EventQueue</innerclass>
    <briefdescription>
<para>Contains the implementation of a thread-safe event queue. </para>
    </briefdescription>
    <detaileddescription>
<para>This namespace provides functionality for managing asynchronous events using a FIFO queue. The primary component is the <ref refid="classevent__queue_1_1EventQueue" kindref="compound">EventQueue</ref> class, which allows events, represented as callable objects, to be enqueued and processed in a thread-safe manner. It leverages standard C++ libraries such as std::queue, std::function, and std::mutex to ensure safe access across multiple threads.</para>
<para>The event queue is particularly useful for decoupling event production from event processing, making it a valuable tool in event-driven architectures, game loops, and other asynchronous applications. </para>
    </detaileddescription>
    <location file="src/event_queue/event_queue.cpp" line="16" column="1"/>
  </compounddef>
</doxygen>
