<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="subject_8hpp" kind="file" language="C++">
    <compoundname>subject.hpp</compoundname>
    <includes refid="observer_8hpp" local="yes">observer.hpp</includes>
    <includes local="no">vector</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">string</includes>
    <includedby refid="observer_2main_8cpp" local="yes">src/observer/main.cpp</includedby>
    <includedby refid="observer__test_8cpp" local="yes">tests/observer_test.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>observer.hpp</label>
        <link refid="observer_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/observer/subject.hpp</label>
        <link refid="subject_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>algorithm</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>src/observer/main.cpp</label>
        <link refid="observer_2main_8cpp"/>
      </node>
      <node id="1">
        <label>src/observer/subject.hpp</label>
        <link refid="subject_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>tests/observer_test.cpp</label>
        <link refid="observer__test_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classobserver_1_1Subject" prot="public">observer::Subject</innerclass>
    <innernamespace refid="namespaceobserver">observer</innernamespace>
    <briefdescription>
<para>Declaration of the Subject class for the Observer pattern. </para>
    </briefdescription>
    <detaileddescription>
<para>This file declares the Subject class, which maintains a list of observers and notifies them about events. Observers can be added or removed dynamically. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SUBJECT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SUBJECT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="observer_8hpp" kindref="compound">observer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceobserver" kindref="compound">observer</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classobserver_1_1Subject" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classobserver_1_1Subject" kindref="compound">Subject</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32" refid="classobserver_1_1Subject_1a544ee43d21c9347650505338df5f5753" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classobserver_1_1Subject_1a544ee43d21c9347650505338df5f5753" kindref="member">addObserver</ref>(<ref refid="classobserver_1_1IObserver" kindref="compound">IObserver</ref>*<sp/><ref refid="namespaceobserver" kindref="compound">observer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classobserver_1_1Subject_1aa290266885924983b5f596c3aa884955" kindref="member">observers</ref>.push_back(<ref refid="namespaceobserver" kindref="compound">observer</ref>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classobserver_1_1Subject_1a7331c2bfa78d6f912b63406613cc7477" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classobserver_1_1Subject_1a7331c2bfa78d6f912b63406613cc7477" kindref="member">removeObserver</ref>(<ref refid="classobserver_1_1IObserver" kindref="compound">IObserver</ref>*<sp/><ref refid="namespaceobserver" kindref="compound">observer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classobserver_1_1Subject_1aa290266885924983b5f596c3aa884955" kindref="member">observers</ref>.erase(</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove(<ref refid="classobserver_1_1Subject_1aa290266885924983b5f596c3aa884955" kindref="member">observers</ref>.begin(),<sp/><ref refid="classobserver_1_1Subject_1aa290266885924983b5f596c3aa884955" kindref="member">observers</ref>.end(),<sp/><ref refid="namespaceobserver" kindref="compound">observer</ref>),</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classobserver_1_1Subject_1aa290266885924983b5f596c3aa884955" kindref="member">observers</ref>.end()</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classobserver_1_1Subject_1ac86ff543cfc456a25147ebb296bfd04a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classobserver_1_1Subject_1ac86ff543cfc456a25147ebb296bfd04a" kindref="member">notify</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;message)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/><ref refid="namespaceobserver" kindref="compound">observer</ref><sp/>:<sp/><ref refid="classobserver_1_1Subject_1aa290266885924983b5f596c3aa884955" kindref="member">observers</ref>)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceobserver" kindref="compound">observer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceobserver" kindref="compound">observer</ref>-&gt;onNotify(message);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65" refid="classobserver_1_1Subject_1aa290266885924983b5f596c3aa884955" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;IObserver*&gt;<sp/><ref refid="classobserver_1_1Subject_1aa290266885924983b5f596c3aa884955" kindref="member">observers</ref>;<sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>observer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>SUBJECT_HPP</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/observer/subject.hpp"/>
  </compounddef>
</doxygen>
